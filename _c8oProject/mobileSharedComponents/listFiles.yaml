↓Div [ngx.components.UIDynamicElement-1653988171950]: 
  beanData: '{"ionBean":"DivTag"}'
  tagName: div
  ↓UseSharedComponent1 [ngx.components.UIUseShared-1653988061062]: 
    sharedcomponent: lib_ExtendedComponents_ui_ngx.MobileApplication.Application.DropZoneComponent
    ↓Event [ngx.components.UIControlEvent-1653988130299]: 
      attrName: (FilesDropped)
      eventName: FilesDropped
      ↓CallSequence [ngx.components.UIDynamicAction-1653988278128]: 
        beanData: '{"ionBean":"CallSequenceAction","requestable":"plain:lib_FileStorage.addFile"}'
        ↓file [ngx.components.UIControlVariable-1653988327415]: 
          comment: file to store
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:out[0]
        ↓lifetime [ngx.components.UIControlVariable-1653988327417]: 
          comment: (optional) file lifetime in minutes, -1 for never expire
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:-1
        ↓id [ngx.components.UIControlVariable-1653988327419]: 
          comment: new variable
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:
    ↓Information [ngx.components.UIUseVariable-1653988134432]: 
      varValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: plain:Add files to the store
↓UseSharedComponent [ngx.components.UIUseShared-1653986361564]: 
  sharedcomponent: lib_ExtendedComponents_ui_ngx.MobileApplication.Application.agGrid
  ↓pagination [ngx.components.UIUseVariable-1653986838118]: 
    comment: 'boolean: true (default) or false'
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:false
  ↓paginationPageSize [ngx.components.UIUseVariable-1653986838120]: 
    comment: 'integer: 10 by default'
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:10
  ↓rowSelection [ngx.components.UIUseVariable-1653986838122]: 
    comment: 'string: ''single'' (default) or ''multiple'''
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:'single'
  ↓rowDeselection [ngx.components.UIUseVariable-1653986838124]: 
    comment: 'boolean: true (default) or false'
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:true
  ↓defaultColDef [ngx.components.UIUseVariable-1653986838126]: 
    comment: 'default is {hide: false, editable: true, sortable: true, resizable: true, filter: true, checkboxSelection: false, singleClickEdit: false}'
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: 'script:{hide: false, editable: false, sortable: false, resizable: true, filter: false, checkboxSelection: false, singleClickEdit: false}'
  ↓columnDefs [ngx.components.UIUseVariable-1653986838128]: 
    comment: 'Array of columnDef {headerName: ''headerName'', field: ''fieldName''} objects'
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:[]
  ↓rowData [ngx.components.UIUseVariable-1653986838130]: 
    comment: 'Array of row { fieldName1: ''value1'', fieldName2: ''value2'', fieldName3: true, ...} objects'
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:[]
  ↓width [ngx.components.UIUseVariable-1653986838132]: 
    comment: width value in % or px
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:'100%'
  ↓height [ngx.components.UIUseVariable-1653986838134]: 
    comment: height is 'auto' or value in % or px
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:'auto'
  ↓class [ngx.components.UIUseVariable-1653986838136]: 
    comment: |
      'One of the themes provided here :
      
      https://www.ag-grid.com/javascript-grid-themes-provided/
      
      Also be shure to add the theme in the Theme object as :
      
      @import "../../node_modules/ag-grid-community/dist/styles/ag-theme-balham-dark/sass/ag-theme-balham-dark.scss";
      
      
      
      '
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:'ag-theme-balham'
  ↓id [ngx.components.UIUseVariable-1653986838138]: 
    comment: An Optional ID
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:''
  ↓suppressCellSelection [ngx.components.UIUseVariable-1653986838140]: 
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:false
  ↓suppressRowClickSelection [ngx.components.UIUseVariable-1653986838142]: 
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:false
  ↓overlayLoadingTemplate [ngx.components.UIUseVariable-1653986838144]: 
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:''
  ↓overlayNoRowsTemplate [ngx.components.UIUseVariable-1653986838146]: 
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:''
  ↓rowHeight [ngx.components.UIUseVariable-1653986838148]: 
    comment: Height of the row in pixels as a string
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:'25'
  ↓wrapperClass [ngx.components.UIUseVariable-1653986838150]: 
    comment: Height of the row in pixels as a string
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:''
  ↓rowModelType [ngx.components.UIUseVariable-1653986838152]: 
    comment: Row model type
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:'infinite'
  ↓maxBlocksInCache [ngx.components.UIUseVariable-1653986838154]: 
    comment: How many blocks to keep in the store. Default is no limit, so every requested block is kept
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:''
  ↓Event [ngx.components.UIControlEvent-1653986845700]: 
    attrName: (CellClicked)
    comment: Fired when a cell is clicked. Data will be the agGrid event
    eventName: CellClicked
  ↓Event1 [ngx.components.UIControlEvent-1653986845702]: 
    attrName: (RowClicked)
    comment: Fired when a row is clicked. Data will be the agGrid event
    eventName: RowClicked
    ↓EmitEvent [ngx.components.UIDynamicEmit-1653989591669]: 
      beanData: |
        '{
         "ionBean": "EmitEventAction",
         "event": "plain:lib_FileStorage_ui_ngx.Application.NgxApp.listFiles.fileSelected",
         "data": "script:out.data"
        }'
  ↓Event2 [ngx.components.UIControlEvent-1653986845704]: 
    attrName: (RowSelected)
    comment: Fired when a row is selected. Data will be the agGrid event
    eventName: RowSelected
  ↓Event3 [ngx.components.UIControlEvent-1653986845706]: 
    attrName: (SortChanged)
    comment: Fired when a a column is sorted. Data will be the agGrid event
    eventName: SortChanged
  ↓Event4 [ngx.components.UIControlEvent-1653986845708]: 
    attrName: (RowDataChanged)
    comment: Fired when Row data changed. Data will be the agGrid event
    eventName: RowDataChanged
  ↓Event5 [ngx.components.UIControlEvent-1653986845710]: 
    attrName: (CellValueChanged)
    comment: Fired when A Cell is edited changed. Data will be the agGrid event
    eventName: CellValueChanged
  ↓Event6 [ngx.components.UIControlEvent-1653986845712]: 
    attrName: (RowDoubleClicked)
    comment: Fired when A Cell is edited changed. Data will be the agGrid event
    eventName: RowDoubleClicked
  ↓Event7 [ngx.components.UIControlEvent-1653986845714]: 
    attrName: (SelectionChanged)
    comment: Fired when selectionChange. Data will be the agGrid event
    eventName: SelectionChanged
  ↓Event8 [ngx.components.UIControlEvent-1653986845716]: 
    attrName: (GridReady)
    comment: Fired when the Grid is ready. Data will be the agGrid event
    eventName: GridReady
  ↓Event9 [ngx.components.UIControlEvent-1653986845718]: 
    attrName: (GetRows)
    comment: Fire when the RowModelType is 'infinite'. Excepts fromatted data into a agGridUpdateRows action
    eventName: GetRows
    ↓CallSequence [ngx.components.UIDynamicAction-1653986881838]: 
      beanData: '{"ionBean":"CallSequenceAction","requestable":"plain:lib_FileStorage.listFiles"}'
      ↓limit [ngx.components.UIControlVariable-1653986931080]: 
        comment: new variable
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:out.limit
      ↓skip [ngx.components.UIControlVariable-1653986931082]: 
        comment: new variable
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:out.skip
      ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1653986984924]: 
        beanData: '{"ionBean":"InvokeAction"}'
        stack: lib_ExtendedComponents_ui_ngx.MobileApplication.Application.agGridUpdateRows
        ↓data [ngx.components.UIControlVariable-1653986990835]: 
          comment: data must receive a JSON with a RowData key and an optional ColDef key
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: source:{"filter":"Action","project":"lib_FileStorage_ui_ngx","input":"","model":{"data":[{"priority":1653986881838}],"path":"?.out","prefix":"","suffix":"","custom":"","useCustom":false}}
        ↓agGridEvent [ngx.components.UIControlVariable-1653986990837]: 
          comment: map agGridEvent to the TS 'event' parameter from the GetRows Control
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:event
↓fileSelected [ngx.components.UICompEvent-1653989579486]: 
  attrName: fileSelected